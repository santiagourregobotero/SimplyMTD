@using SimplyMTD.Data
@inject TokenProvider TokensProvider

<CascadingAuthenticationState>
	<Router AppAssembly="@typeof(App).Assembly">
		<Found Context="routeData">
			<AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
				<NotAuthorized>
					<RedirectToLogin IsAuthenticated="@context.User.Identity.IsAuthenticated" />
				</NotAuthorized>
				<Authorizing></Authorizing>
			</AuthorizeRouteView>
		</Found>
		<NotFound>
			<PageTitle>Not found</PageTitle>
			<LayoutView Layout="@typeof(MainLayout)">
				<div class="row">
					<div class="col-12" style="margin-top: 5rem; margin-bottom: 5rem">
						<RadzenText Text="Page not found" TextStyle="TextStyle.DisplayH1" style="margin: 0; margin-bottom: 2rem" TextAlign="TextAlign.Center" />
						<RadzenText Text="Sorry, but there's nothing here!" TextStyle="TextStyle.H6" style="margin: 0" TextAlign="TextAlign.Center" TagName="TagName.P" />
					</div>
				</div>
			</LayoutView>
		</NotFound>
	</Router>
</CascadingAuthenticationState>

@code {
	[Parameter] public InitialApplicationState InitialState { get; set; }

	protected override Task OnInitializedAsync()
	{
		TokensProvider.AccessToken = InitialState.AccessToken;
		TokensProvider.RefreshToken = InitialState.RefreshToken;

		return base.OnInitializedAsync();
	}
}
